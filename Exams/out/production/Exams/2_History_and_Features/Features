Features of Kotlin
    1.Statically typed:  Statically typed is a programming language characteristic that means the type of every
    variable and expression is known at compile time. Although it is statically typed language, it does not require
    you to explicitly specify the type of every variable you declare.
    2.Data classes: In Kotlin, there are Data Classes which lead to auto-generation of boilerplate like equals,
    hashCode, toString, getters/setters and much more.
    3.Concise: It drastically reduces the extra code written in other object-oriented programming languages.
    4.It provides the safety from most annoying and irritating NullPointerExceptions by supporting nullability as
    part of its system.
        + Every variable in Kotlin is non-null by default. If we try to assign null value to our variables, it will
        result in errors
        + To assign null value, we declare our variables as nullable
    5.Interoperable with Java:  Kotlin runs on Java Virtual Machine(JVM) so it is totally interoperable with java. We
    can easily access use java code from kotlin and kotlin code from java.
    6.Functional and Object Oriented Capabilities:  Kotlin has rich set of many useful methods which includes
    higher-order functions, lambda expressions, operator overloading, lazy evaluation, operator overloading and
    much more.
    7.Smart Cast:  It explicitly typecasts the immutable values and inserts the value in its safe cast automatically.
    If we try to access a nullable type of String ( String? = “BYE”) without safe cast it will generate a compile error.

    8.Compilation time: It has higher performance and fast compilation time.
    9.Tool-Friendly:  It has excellent tooling support. Any of the Java IDEs – IntelliJ IDEA,
    Eclipse and Android Studio can be used for Kotlin. We can also be run Kotlin program from command line.
